# Generated by Django 5.2.5 on 2025-08-17 16:05

import django.db.models.deletion
import utilities.global_functions
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tickets', '0006_alter_ticket_sla_breached_alter_ticket_ticket_number_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('reference_id', models.CharField(db_index=True, default=utilities.global_functions.generate_uuid, editable=False, help_text='Unique identifier for external reference', max_length=32, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Status to check if the entity is active')),
                ('remarks', models.CharField(blank=True, max_length=300, null=True)),
                ('notification_type', models.CharField(choices=[('ticket_created', 'Ticket Created'), ('ticket_updated', 'Ticket Updated'), ('ticket_assigned', 'Ticket Assigned'), ('ticket_reassigned', 'Ticket Reassigned'), ('status_changed', 'Status Changed'), ('priority_changed', 'Priority Changed'), ('due_date_approaching', 'Due Date Approaching')], db_index=True, help_text='Type/category of the notification', max_length=30)),
                ('title', models.CharField(help_text='Short summary of the notification', max_length=200)),
                ('message', models.TextField(help_text='Full content of the notification')),
                ('is_read', models.BooleanField(db_index=True, default=False, help_text='Whether recipient has viewed the notification')),
                ('is_sent', models.BooleanField(db_index=True, default=False, help_text='Whether notification was successfully delivered')),
                ('sent_at', models.DateTimeField(blank=True, db_index=True, help_text='Timestamp when notification was delivered', null=True)),
                ('read_at', models.DateTimeField(blank=True, db_index=True, help_text='Timestamp when recipient viewed the notification', null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(help_text='User receiving the notification', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, help_text='User/system that triggered the notification', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
                ('ticket', models.ForeignKey(help_text='Related ticket (if applicable)', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='tickets.ticket')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'db_table': 'notification_log',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read'], name='notificatio_recipie_94d75e_idx'), models.Index(fields=['notification_type'], name='notificatio_notific_2b209e_idx'), models.Index(fields=['ticket', 'created_at'], name='notificatio_ticket__a508b1_idx'), models.Index(fields=['is_sent', 'created_at'], name='notificatio_is_sent_68b606_idx'), models.Index(fields=['sender', 'created_at'], name='notificatio_sender__931de8_idx'), models.Index(fields=['is_read', 'is_sent'], name='notificatio_is_read_98a68d_idx'), models.Index(condition=models.Q(('is_read', False)), fields=['recipient'], name='unread_notifications_idx')],
            },
        ),
    ]
